{"ast":null,"code":"var _jsxFileName = \"C:\\\\WalletDapp\\\\src\\\\Components\\\\Authorization.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3Connect from \"./Web3Connect\";\nimport '../css/Authorization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authorization = () => {\n  _s();\n  const {\n    web3,\n    contract\n  } = Web3Connect();\n  const [seedPhrase, setSeedPhrase] = useState('');\n  const [authorized, setAuthorized] = useState(false);\n  const handleSeedPhraseChange = e => {\n    setSeedPhrase(e.target.value);\n  };\n  const handleAuthorization = () => {\n    // Здесь можно выполнить проверку или обработку seed-фразы\n    // Например, проверка длины или отправка на сервер для проверки\n\n    // В данном примере, просто устанавливаем состояние authorized в true\n    setAuthorized(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authorization-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Authorization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), !authorized ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"authorization-form\",\n      onSubmit: handleAuthorization,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter your private key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: seedPhrase,\n          onChange: handleSeedPhraseChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Authorize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Successfully authorized!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Authorization, \"mB80DhJd9Bt3AwLHOucxhrls1IA=\");\n_c = Authorization;\nexport default Authorization;\nvar _c;\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"names":["React","useState","Web3Connect","jsxDEV","_jsxDEV","Authorization","_s","web3","contract","seedPhrase","setSeedPhrase","authorized","setAuthorized","handleSeedPhraseChange","e","target","value","handleAuthorization","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/WalletDapp/src/Components/Authorization.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3Connect from \"./Web3Connect\";\r\nimport '../css/Authorization.css';\r\n\r\nconst Authorization = () => {\r\n  const { web3, contract } = Web3Connect();\r\n\r\n  const [seedPhrase, setSeedPhrase] = useState('');\r\n  const [authorized, setAuthorized] = useState(false);\r\n\r\n  const handleSeedPhraseChange = (e) => {\r\n    setSeedPhrase(e.target.value);\r\n  };\r\n\r\n  const handleAuthorization = () => {\r\n    // Здесь можно выполнить проверку или обработку seed-фразы\r\n    // Например, проверка длины или отправка на сервер для проверки\r\n\r\n    // В данном примере, просто устанавливаем состояние authorized в true\r\n    setAuthorized(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authorization-container\">\r\n      <h2>Authorization</h2>\r\n      {!authorized ? (\r\n        <form className=\"authorization-form\" onSubmit={handleAuthorization}>\r\n          <label>\r\n            Enter your private key:\r\n            <input\r\n              type=\"text\"\r\n              value={seedPhrase}\r\n              onChange={handleSeedPhraseChange}\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Authorize</button>\r\n        </form>\r\n      ) : (\r\n        <div>\r\n          <p>Successfully authorized!</p>\r\n          {/* Здесь можно отображать защищенный контент */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authorization;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGN,WAAW,CAAC,CAAC;EAExC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMY,sBAAsB,GAAIC,CAAC,IAAK;IACpCJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA;;IAEA;IACAL,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB,CAACZ,UAAU,gBACVP,OAAA;MAAMc,SAAS,EAAC,oBAAoB;MAACM,QAAQ,EAAEP,mBAAoB;MAAAE,QAAA,gBACjEf,OAAA;QAAAe,QAAA,GAAO,yBAEL,eAAAf,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXT,KAAK,EAAEP,UAAW;UAClBiB,QAAQ,EAAEb,sBAAuB;UACjCc,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRnB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,gBAEPnB,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAAe,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA1CID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}