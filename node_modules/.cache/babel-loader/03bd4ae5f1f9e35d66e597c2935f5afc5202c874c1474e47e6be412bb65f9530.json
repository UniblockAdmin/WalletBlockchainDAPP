{"ast":null,"code":"import React,{useState}from'react';import Web3Connect from\"./Web3Connect\";import'../css/Authorization.css';import WalletPanel from'./WalletPanel';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Authorization=()=>{const{web3,contract}=Web3Connect();const[seedPhrase,setSeedPhrase]=useState('');const[authorized,setAuthorized]=useState(false);const[walletAddress,setWalletAddress]=useState('');const handleSeedPhraseChange=e=>{setSeedPhrase(e.target.value);};const handleAuthorization=()=>{// Здесь можно выполнить проверку или обработку seed-фразы\n// Например, проверка длины или отправка на сервер для проверки\n// В данном примере, просто устанавливаем состояние authorized в true\nsetAuthorized(true);};const getAddressByPrivateKey=()=>{const privateKey=document.getElementById(\"data-field\").value;if(!privateKey||privateKey.length!==66){throw new Error('Invalid private key');}const account=web3.eth.accounts.privateKeyToAccount(privateKey);console.log(account.address);setWalletAddress(account.address);return account.address;};return/*#__PURE__*/_jsxs(\"div\",{className:\"authorization-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A UniBlockchain (demo)\"}),!authorized?/*#__PURE__*/_jsxs(\"form\",{className:\"authorization-form\",onSubmit:handleAuthorization,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447 \\u0434\\u043B\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u0432 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0435:\",/*#__PURE__*/_jsx(\"input\",{id:\"data-field\",type:\"text\",value:seedPhrase,onChange:handleSeedPhraseChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{onClick:getAddressByPrivateKey,type:\"submit\",children:\"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Successfully authorized!\"}),/*#__PURE__*/_jsx(WalletPanel,{walletAddress:walletAddress})]})]});};export default Authorization;","map":{"version":3,"names":["React","useState","Web3Connect","WalletPanel","jsx","_jsx","jsxs","_jsxs","Authorization","web3","contract","seedPhrase","setSeedPhrase","authorized","setAuthorized","walletAddress","setWalletAddress","handleSeedPhraseChange","e","target","value","handleAuthorization","getAddressByPrivateKey","privateKey","document","getElementById","length","Error","account","eth","accounts","privateKeyToAccount","console","log","address","className","children","onSubmit","id","type","onChange","required","onClick"],"sources":["C:/WalletDapp/src/Components/Authorization.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3Connect from \"./Web3Connect\";\r\nimport '../css/Authorization.css';\r\nimport WalletPanel from './WalletPanel';\r\n\r\nconst Authorization = () => {\r\n  const { web3, contract } = Web3Connect();\r\n\r\n  const [seedPhrase, setSeedPhrase] = useState('');\r\n  const [authorized, setAuthorized] = useState(false);\r\n  const [walletAddress,  setWalletAddress] = useState('');\r\n\r\n  const handleSeedPhraseChange = (e) => {\r\n    setSeedPhrase(e.target.value);\r\n  };\r\n\r\n  const handleAuthorization = () => {\r\n    // Здесь можно выполнить проверку или обработку seed-фразы\r\n    // Например, проверка длины или отправка на сервер для проверки\r\n\r\n    // В данном примере, просто устанавливаем состояние authorized в true\r\n    setAuthorized(true);\r\n  };\r\n\r\n  const getAddressByPrivateKey = () => {\r\n\r\n    const privateKey = document.getElementById(\"data-field\").value;\r\n\r\n    if (!privateKey || privateKey.length !== 66) {\r\n        throw new Error('Invalid private key');\r\n    }\r\n\r\n    const account = web3.eth.accounts.privateKeyToAccount(privateKey);\r\n\r\n    console.log(account.address);\r\n    setWalletAddress(account.address);\r\n\r\n    \r\n    return account.address;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"authorization-container\">\r\n      <h2>Кошелёк UniBlockchain (demo)</h2>\r\n      {!authorized ? (\r\n        <form className=\"authorization-form\" onSubmit={handleAuthorization}>\r\n          <label>\r\n            Пожалуйста, введите приватный ключ для авторизации в кошельке:\r\n            <input \r\n              id=\"data-field\"\r\n              type=\"text\"\r\n              value={seedPhrase}\r\n              onChange={handleSeedPhraseChange}\r\n              required\r\n            />\r\n          </label>\r\n          <button onClick={getAddressByPrivateKey} type=\"submit\">Авторизоваться</button>\r\n        </form>\r\n      ) : (\r\n        <div>\r\n          <p>Successfully authorized!</p>\r\n          {/* Здесь можно отображать защищенный контент */}\r\n          <WalletPanel walletAddress={walletAddress}/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authorization;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,0BAA0B,CACjC,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAGR,WAAW,CAAC,CAAC,CAExC,KAAM,CAACS,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACc,aAAa,CAAGC,gBAAgB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAEvD,KAAM,CAAAgB,sBAAsB,CAAIC,CAAC,EAAK,CACpCN,aAAa,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC;AACA;AAEA;AACAP,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAAQ,sBAAsB,CAAGA,CAAA,GAAM,CAEnC,KAAM,CAAAC,UAAU,CAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACL,KAAK,CAE9D,GAAI,CAACG,UAAU,EAAIA,UAAU,CAACG,MAAM,GAAK,EAAE,CAAE,CACzC,KAAM,IAAI,CAAAC,KAAK,CAAC,qBAAqB,CAAC,CAC1C,CAEA,KAAM,CAAAC,OAAO,CAAGnB,IAAI,CAACoB,GAAG,CAACC,QAAQ,CAACC,mBAAmB,CAACR,UAAU,CAAC,CAEjES,OAAO,CAACC,GAAG,CAACL,OAAO,CAACM,OAAO,CAAC,CAC5BlB,gBAAgB,CAACY,OAAO,CAACM,OAAO,CAAC,CAGjC,MAAO,CAAAN,OAAO,CAACM,OAAO,CACxB,CAAC,CAED,mBACE3B,KAAA,QAAK4B,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtC/B,IAAA,OAAA+B,QAAA,CAAI,iEAA4B,CAAI,CAAC,CACpC,CAACvB,UAAU,cACVN,KAAA,SAAM4B,SAAS,CAAC,oBAAoB,CAACE,QAAQ,CAAEhB,mBAAoB,CAAAe,QAAA,eACjE7B,KAAA,UAAA6B,QAAA,EAAO,yUAEL,cAAA/B,IAAA,UACEiC,EAAE,CAAC,YAAY,CACfC,IAAI,CAAC,MAAM,CACXnB,KAAK,CAAET,UAAW,CAClB6B,QAAQ,CAAEvB,sBAAuB,CACjCwB,QAAQ,MACT,CAAC,EACG,CAAC,cACRpC,IAAA,WAAQqC,OAAO,CAAEpB,sBAAuB,CAACiB,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,sFAAc,CAAQ,CAAC,EAC1E,CAAC,cAEP7B,KAAA,QAAA6B,QAAA,eACE/B,IAAA,MAAA+B,QAAA,CAAG,0BAAwB,CAAG,CAAC,cAE/B/B,IAAA,CAACF,WAAW,EAACY,aAAa,CAAEA,aAAc,CAAC,CAAC,EACzC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}