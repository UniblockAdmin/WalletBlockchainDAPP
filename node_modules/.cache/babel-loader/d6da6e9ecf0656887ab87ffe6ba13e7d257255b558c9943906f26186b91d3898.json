{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olavi\\\\uniblock\\\\WalletBlockchainApp\\\\WalletBlockchainApp\\\\src\\\\Components\\\\Authorization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3Connect from \"./Web3Connect\";\nimport '../css/Authorization.css';\nimport WalletPanel from './WalletPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authorization = () => {\n  _s();\n  const {\n    web3,\n    contract\n  } = Web3Connect();\n  const [seedPhrase, setSeedPhrase] = useState('');\n  const [authorized, setAuthorized] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [balance, setBalance] = useState(0);\n  const [tokenBalanceObj, setTokenBalance] = useState(0); // Добавляем состояние для баланса\n\n  const handleSeedPhraseChange = e => {\n    setSeedPhrase(e.target.value);\n  };\n  const handleAuthorization = () => {\n    setAuthorized(true);\n  };\n  const getAddressByPrivateKey = () => {\n    const privateKey = document.getElementById(\"data-field\").value;\n    if (!privateKey || privateKey.length !== 66) {\n      throw new Error('Invalid private key');\n    }\n    const account = web3.eth.accounts.privateKeyToAccount(privateKey);\n    console.log(account.address);\n    setWalletAddress(account.address);\n    return account.address;\n  };\n\n  // Запрашиваем баланс при авторизации и при изменении адреса кошелька\n  useEffect(() => {\n    if (authorized) {\n      web3.eth.getBalance(walletAddress).then(balance => {\n        // The balance is returned in wei, so you can convert it to Ether\n        const etherBalance = web3.utils.fromWei(balance, 'ether');\n        setBalance(etherBalance);\n      }).catch(error => {\n        console.error('Error fetching balance:', error);\n      });\n      try {\n        const accounts = web3.eth.getAccounts();\n        if (accounts.length === 0) {\n          console.error(\"No account connected.\");\n          return;\n        }\n        const tokenBalance = contract.methods.balanceOf(walletAddress).call({\n          from: accounts[0]\n        });\n        setTokenBalance({\n          balance: tokenBalance\n        });\n      } catch (error) {\n        console.error(\"Error getting token balance:\", error);\n      }\n    }\n  }, [authorized, walletAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authorization-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A UniBlockchain (demo)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !authorized ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"authorization-form\",\n      onSubmit: handleAuthorization,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0432\\u0430\\u0442\\u043D\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447 \\u0434\\u043B\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u0432 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"data-field\",\n          type: \"text\",\n          value: seedPhrase,\n          onChange: handleSeedPhraseChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAddressByPrivateKey,\n        type: \"submit\",\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Successfully authorized!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WalletPanel, {\n        walletAddress: walletAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441 ETH: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Authorization, \"7XcCl8zT4EWJ4ZcihdXGnY9CJl0=\");\n_c = Authorization;\nexport default Authorization;\nvar _c;\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"names":["React","useState","useEffect","Web3Connect","WalletPanel","jsxDEV","_jsxDEV","Authorization","_s","web3","contract","seedPhrase","setSeedPhrase","authorized","setAuthorized","walletAddress","setWalletAddress","balance","setBalance","tokenBalanceObj","setTokenBalance","handleSeedPhraseChange","e","target","value","handleAuthorization","getAddressByPrivateKey","privateKey","document","getElementById","length","Error","account","eth","accounts","privateKeyToAccount","console","log","address","getBalance","then","etherBalance","utils","fromWei","catch","error","getAccounts","tokenBalance","methods","balanceOf","call","from","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/olavi/uniblock/WalletBlockchainApp/WalletBlockchainApp/src/Components/Authorization.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3Connect from \"./Web3Connect\";\nimport '../css/Authorization.css';\nimport WalletPanel from './WalletPanel';\n\nconst Authorization = () => {\n  const { web3, contract } = Web3Connect();\n\n  const [seedPhrase, setSeedPhrase] = useState('');\n  const [authorized, setAuthorized] = useState(false);\n  const [walletAddress,  setWalletAddress] = useState('');\n  const [balance, setBalance] = useState(0);\n  const [tokenBalanceObj, setTokenBalance] = useState(0); // Добавляем состояние для баланса\n\n  const handleSeedPhraseChange = (e) => {\n    setSeedPhrase(e.target.value);\n  };\n\n  const handleAuthorization = () => {\n    setAuthorized(true);\n  };\n\n  const getAddressByPrivateKey = () => {\n    const privateKey = document.getElementById(\"data-field\").value;\n\n    if (!privateKey || privateKey.length !== 66) {\n        throw new Error('Invalid private key');\n    }\n\n    const account = web3.eth.accounts.privateKeyToAccount(privateKey);\n\n    console.log(account.address);\n    setWalletAddress(account.address);\n\n    return account.address;\n  }\n\n  // Запрашиваем баланс при авторизации и при изменении адреса кошелька\n  useEffect(() => {\n    if (authorized) {\n      web3.eth.getBalance(walletAddress)\n        .then(balance => {\n          // The balance is returned in wei, so you can convert it to Ether\n          const etherBalance = web3.utils.fromWei(balance, 'ether');\n          setBalance(etherBalance);\n        })\n        .catch(error => {\n          console.error('Error fetching balance:', error);\n        });\n\n\n\n\n        try {\n          const accounts = web3.eth.getAccounts();\n          \n          if (accounts.length === 0) {\n            console.error(\"No account connected.\");\n            return;\n          }\n    \n          const tokenBalance = contract.methods\n            .balanceOf(walletAddress)\n            .call({ from: accounts[0] });\n        \n          setTokenBalance({ balance: tokenBalance });\n        } catch (error) {\n          console.error(\"Error getting token balance:\", error);\n        }\n        \n    }\n  }, [authorized, walletAddress]);\n\n  return (\n    <div className=\"authorization-container\">\n      <h2>Кошелёк UniBlockchain (demo)</h2>\n      {!authorized ? (\n        <form className=\"authorization-form\" onSubmit={handleAuthorization}>\n          <label>\n            Пожалуйста, введите приватный ключ для авторизации в кошельке:\n            <input \n              id=\"data-field\"\n              type=\"text\"\n              value={seedPhrase}\n              onChange={handleSeedPhraseChange}\n              required\n            />\n          </label>\n          <button onClick={getAddressByPrivateKey} type=\"submit\">Авторизоваться</button>\n        </form>\n      ) : (\n        <div>\n          <p>Successfully authorized!</p>\n          <WalletPanel walletAddress={walletAddress} />\n          <p>Баланс ETH: {balance}</p> \n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Authorization;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}